import requests
import os
import json

json_file_path = os.path.join("config", "settings.json")

absolute_path = os.path.abspath(json_file_path)

try:
    with open(absolute_path, 'r', encoding='utf-8') as json_file:
        config = json.load(json_file)
        base_url = config.get("base_url")
except FileNotFoundError:
    print(f"[ERROR] JSON File Not Found. PATH : {absolute_path}")
except json.JSONDecodeError:
    print(f"[ERROR] JSON File is invalid. PATH : {absolute_path}")

try :
    response = requests.get(base_url)
except requests.RequestException as e :
    print(f"HTTP Request Failed: {e}")    

print("\nAll Response Headers:")
for header, value in response.headers.items():
    print(f"{header}: {value}")


def get_server_info(response) :
    server_info = response.headers.get("Server", "Server info Not Found")
    powered_by = response.headers.get("X-Powered-By", "\'Powered by\' Not Found")
    
    print("Server Information:")
    print(f"- Server: {server_info}")
    print(f"- X-Powered-By : {powered_by}")

def get_security_headers(response) :
    security_headers = {
        "Content-Security-Policy": response.headers.get("Content-Security-Policy", None),
        "Strict-Transport-Security": response.headers.get("Strict-Transport-Security", None),
        "X-Frame-Options": response.headers.get("X-Frame-Options", None),
        "X-Content-Type-Options": response.headers.get("X-Content-Type-Options", None),
        "X-XSS-Protection": response.headers.get("X-XSS-Protection", None),
        "Permissions-Policy": response.headers.get("Permissions-Policy", None),
    }

    print("\nSecurity Headers:")
    for header, value in security_headers.items():
        if value:
            print(f"- {header} : {value}")
        else:
            print(f"[CAUTION] {header}: Not Found")
            print(f"   [Potential Vulnerability] {header} is missing and may expose the server to attacks.")

    


def check_cors(response):
    cors_headers = {
        "Access-Control-Allow-Origin": response.headers.get("Access-Control-Allow-Origin", None),
        "Access-Control-Allow-Credentials": response.headers.get("Access-Control-Allow-Credentials", None),
        "Access-Control-Allow-Methods": response.headers.get("Access-Control-Allow-Methods", None),
        "Access-Control-Allow-Headers": response.headers.get("Access-Control-Allow-Headers", None),
        "Access-Control-Expose-Headers": response.headers.get("Access-Control-Expose-Headers", None),
        "Access-Control-Max-Age": response.headers.get("Access-Control-Max-Age", None),
    }

    origin = cors_headers["Access-Control-Allow-Origin"]
    credentials = cors_headers["Access-Control-Allow-Credentials"]

    print("\nCORS Headers:")
    for header, value in cors_headers.items():
        if value:
            print(f"- {header} : {value}")
            if header == "Access-Control-Allow-Origin":
                if origin == "*":
                    print("   [Potential Vulnerability] Access-Control-Allow-Origin is set to '*', allowing all domains.")
            if header == "Access-Control-Allow-Credentials" :
                if credentials :
                    print(" ")      



    

get_server_info(response)
get_security_headers(response)
check_cors(response)


